/**
 * RubberBand elastic grid system - core
 *
 * This is the core implementation of the elastic grid.  It provides multi-column layout
 * with any number of columns from 2 to 12.  Columns of different widths can be freely
 * mixed, provided their total width equals the .columnHolder container.  The gutter 
 * between columns is fixed at 1.5% of container width. 
 *
 * @copyright Gordian Solutions and Gordon McVey
 * @license http://www.apache.org/licenses/LICENSE-2.0.txt Apache license V2.0
 */

/* Column container */
.columnHolder {
	/* This is meant to cause whitespace between cells to become irrevelent */
    letter-spacing: -0.31em;
    word-spacing: -0.43em;
}
.columnHolder > * {
	/* This is meant to restore normal word and letter spacing to the child nodes of the column holder */
    letter-spacing: normal;
    word-spacing: normal;
}

/* Column elements */
.columnHolder > .column, 
.columnHolder.autobreak > * {
	display: inline-block;
	vertical-align: top;
	margin: .75% 1.5% .75% 0; /* Specifies a 1.5% gutter */
}

/* Remove the gutter from the elements that mark the end of a set of columns */
.columnHolder > :last-child, 
.columnHolder > .endrow, 
.columnHolder.autobreak.half > :nth-child(2n+2), 
.columnHolder.autobreak.third > :nth-child(3n+3), 
.columnHolder.autobreak.quarter > :nth-child(4n+4), 
.columnHolder.autobreak.fifth > :nth-child(5n+5), 
.columnHolder.autobreak.sixth > :nth-child(6n+6), 
.columnHolder.autobreak.seventh > :nth-child(7n+7), 
.columnHolder.autobreak.eighth > :nth-child(8n+8), 
.columnHolder.autobreak.ninth > :nth-child(9n+9), 
.columnHolder.autobreak.tenth > :nth-child(10n+10), 
.columnHolder.autobreak.eleventh > :nth-child(11n+11), 
.columnHolder.autobreak.twelth > :nth-child(12n+12) {
	margin: .75% 0 .75% 0;
}
/* We need to make a completely different declaration for IE because IE is DUMB AS HELL! */
.columnHolder > *.last-child,
.columnHolder > .endrow {
	margin: .75% 0 .75% 0;
}

/*
 * Column dimension specifications
 *
 * The formula for computing column sizes is as follows 
 * (where n is the number of columns intended to fit in the container): 
 *
 * (Container width - (n - 1 gutters)) / n gutters
 */

/* Columns that take up half of the space or less */
.columnHolder > .column.half, 
.columnHolder > .column.quarter.two, 
.columnHolder > .column.sixth.three, 
.columnHolder > .column.eighth.four, 
.columnHolder > .column.tenth.five, 
.columnHolder > .column.twelth.six, 
.columnHolder.autobreak.half > * {
	width: 49.25%;
}
.columnHolder > .column.third, 
.columnHolder > .column.sixth.two, 
.columnHolder > .column.ninth.three, 
.columnHolder > .column.twelth.four,
.columnHolder.autobreak.third > * {
	width: 32.3333333333333%;
}
.columnHolder > .column.quarter, 
.columnHolder > .column.eighth.two, 
.columnHolder > .column.twelth.three,
.columnHolder.autobreak.quarter > * {
	width: 23.875%;
}
.columnHolder > .column.fifth, 
.columnHolder > .column.tenth.two, 
.columnHolder.autobreak.fifth > * {
	width: 18.8%;
}
.columnHolder > .column.sixth, 
.columnHolder > .column.twelth.two, 
.columnHolder.autobreak.sixth > * {
	width: 15.4166666666667%;
}
.columnHolder > .column.seventh, 
.columnHolder.autobreak.seventh > * {
	width: 13%;
}
.columnHolder > .column.eighth, 
.columnHolder.autobreak.eighth > * {
	width: 11.1875%;
}
.columnHolder > .column.ninth, 
.columnHolder.autobreak.ninth > * {
	width: 9.77777777777778%;
}
.columnHolder > .column.tenth, 
.columnHolder.autobreak.tenth > * {
	width: 8.65%;
}
.columnHolder > .column.eleventh, 
.columnHolder.autobreak.eleventh > * {
	width: 7.72727272727273%;
}
.columnHolder > .column.twelth,
.columnHolder.autobreak.twelth > * {
	width: 6.95833333333333%;
}

/* 
 * Columns that take up more than half of the space 
 *
 * The formula for calculating the the column sizes is as follows 
 * (where n is the number of columns to span across):
 *
 * (Normal width * n) + (n -1) gutters
 */
.columnHolder > .column.third.two,
.columnHolder > .column.sixth.four, 
.columnHolder > .column.ninth.six, 
.columnHolder > .column.twelth.eight {
	width: 66.1666666666666%;
}

.columnHolder > .column.quarter.three, 
.columnHolder > .column.eighth.six, 
.columnHolder > .column.twelth.nine {
	width: 74.625%;
}

.columnHolder > .column.fifth.two, 
.columnHolder > .column.tenth.four {
	width: 39.1%;
}
.columnHolder > .column.fifth.three, 
.column.tenth.six {
	width: 59.4%;
}
.columnHolder > .column.fifth.four, 
.columnHolder > .column.tenth.eight {
	width: 79.7%;
}

.columnHolder > .column.sixth.five, 
.columnHolder > .column.twelth.ten {
	width: 83.0833333333335%;
}

.columnHolder > .column.seventh.two {
	width: 27.5%;
}
.columnHolder > .column.seventh.three {
	width: 42%
}
.columnHolder > .column.seventh.four {
	width: 56.5%;
}
.columnHolder > .column.seventh.five {
	width: 71%;
}
.columnHolder > .column.seventh.six {
	width: 85.5%;
}

.columnHolder > .column.eighth.three {
	width: 36.5625%;
}
.columnHolder > .column.eighth.five {
	width: 61.9375%;
}
.columnHolder > .column.eighth.seven {
	width: 87.3125%;
}

.columnHolder > .column.ninth.two {
	width: 21.0555555555556%;
}
.columnHolder > .column.ninth.four {
	width: 43.6111111111111%;
}
.columnHolder > .column.ninth.five {
	width: 54.8888888888889%;
}
.columnHolder > .column.ninth.seven {
	width: 77.4444444444445%;
}
.columnHolder > .column.ninth.eight {
	width: 88.7222222222222%;
}

.columnHolder > .column.tenth.three {
	width: 28.95%;
}
.columnHolder > .column.tenth.seven {
	width: 69.55%;
}
.columnHolder > .column.tenth.nine {
	width: 89.85%;
}

.columnHolder > .column.eleventh.two {
	width: 16.9545454545455%;
}
.columnHolder > .column.eleventh.three {
	width: 26.1818181818182%;
}
.columnHolder > .column.eleventh.four {
	width: 35.4090909090909%;
}
.columnHolder > .column.eleventh.five {
	width: 44.6363636363637%;
}
.columnHolder > .column.eleventh.six {
	width: 53.8636363636364%;
}
.columnHolder > .column.eleventh.seven {
	width: 63.0909090909091%;
}
.columnHolder > .column.eleventh.eight {
	width: 72.3181818181819%;
}
.columnHolder > .column.eleventh.nine {
	width: 81.5454545454546%;
}
.columnHolder > .column.eleventh.ten {
	width: 90.7727272727273%;
}

.columnHolder > .column.twelth.five {
	width: 40.7916666666667%;
}
.columnHolder > .column.twelth.seven {
	width: 57.7083333333333%;
}
.columnHolder > .column.twelth.eleven {
	width: 91.5416666666666%;
}
